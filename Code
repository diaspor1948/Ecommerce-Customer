
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#Data

customers = pd.read_csv('C:\\Users\\.....\\Linear-Regression\\Ecommerce Customers')

customers.head(3)

customers.info()

customers.describe()

#Exploratory Data Analysis

sns.jointplot(x='Time on Website',y='Yearly Amount Spent',data=customers)

sns.jointplot(x='Time on App',y='Yearly Amount Spent',data=customers)

sns.jointplot(x='Time on App',y='Length of Membership',kind='hex',data=customers)

sns.pairplot(customers)

sns.lmplot(x='Yearly Amount Spent',y='Length of Membership',data=customers)

#Training and Testing Data

from sklearn.model_selection import train_test_split

x = customers[['Avg. Session Length','Time on App','Time on Website','Length of Membership']]

y = customers['Yearly Amount Spent']

x_train, x_test, y_train, y_test = train_test_split(
        x,y,test_size=.3,random_state=101
        )
#Training Model

from sklearn.linear_model import LinearRegression

lm = LinearRegression()

lm.fit(x_train,y_train)

print('Coefficients: \n', lm.coef_)

coeff_df = pd.DataFrame(lm.coef_,x.columns,columns=['Yearly Amoun Spent'])

#Predicting Test Data

predictions = lm.predict[x_test]

plt.scatter(y_test,predictions)
plt.xlabel('Y Test')
plt.ylabel('Predicted Y')

#Evaluaing Model
from sklearn import metrics

print('MAE:', metrics.mean_absolute_error(y_test, predictions))
print('MSE:', metrics.mean_squared_error(y_test, predictions))
print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, predictions)))

#Residuals
sns.distplot((y_test-predictions),bins=50)

#Conclusion
coeffecients = pd.DataFrame(lm.coef_,x.columns)
coeffecients.columns = ['Coeffecient']
coeffecients
